BIO （Blocking I/O）：同步阻塞I/O模式，数据的读取写入必须阻塞在一个线程内等待其完成。
（用户发起一个请求后，必须等待io操作的完成，只有当操作完成时，才能继续操作）
这里使用那个经典的烧开水例子，这里假设一个烧开水的场景，有一排水壶在烧开水，BIO的工作模式就是，
叫一个线程停留在一个水壶那，直到这个水壶烧开，才去处理下一个水壶。但是实际上线程在等待水壶烧开的时间段什么都没有做。

NIO （New I/O）：
同时支持阻塞与非阻塞模式，但这里我们以其同步非阻塞I/O模式来说明，
（用户进程发起操作以后，可以去做其他事情，用户进程需要不断的询问IO操作是否就绪。）
那么什么叫做同步非阻塞？
如果还拿烧开水来说，NIO的做法是叫一个线程不断的轮询每个水壶的状态，看看是否有水壶的状态发生了改变，从而进行下一步的操作。


AIO （ Asynchronous I/O）：异步非阻塞I/O模型。
（发起一个请求后，不用等待服务器的操作完成，等服务器操作完成以后，会通知客户端。）
异步非阻塞与同步非阻塞的区别在哪里？
异步非阻塞无需一个线程去轮询所有IO操作的状态改变，在相应的状态改变后，系统会通知对应的线程来处理。
对应到烧开水中就是，为每个水壶上面装了一个开关，水烧开之后，水壶会自动通知我水烧开了。

NIO基于模式Reactor，AIO基于Proactor模式

相关文档：
代码：https://segmentfault.com/a/1190000012976683
文字：https://juejin.im/entry/598da7d16fb9a03c42431ed3